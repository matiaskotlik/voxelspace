name: Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Install alsa
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev

      - name: Install udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Install alsa
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev

      - name: Install udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Install alsa
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev

      - name: Install udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install clippy
        run: rustup component add clippy

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [linux, windows, macos]

        include:
          - name: linux
            os: ubuntu-latest
            artifact_path: target/release/voxelspace
            artifact_name: voxelspace-linux
            asset_name: voxelspace-linux
          - name: windows
            os: windows-latest
            artifact_path: target/release/voxelspace.exe
            artifact_name: voxelspace-windows.exe
            asset_name: voxelspace-windows
          - name: macos
            os: macos-latest
            artifact_path: target/release/voxelspace
            artifact_name: voxelspace-macos
            asset_name: voxelspace-macos

    steps:
      - name: Install alsa
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev

      - name: Install udev
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked

      - name: Strip binary
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: strip '${{ matrix.artifact_path }}'

      - name: Rename artifact
        run: mv '${{ matrix.artifact_path }}' '${{ matrix.artifact_name }}'

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2

      - name: List files
        run: ls -lR

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: '*/*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
